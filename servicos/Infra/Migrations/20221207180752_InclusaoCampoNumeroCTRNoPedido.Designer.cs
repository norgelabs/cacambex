// <auto-generated />
using System;
using Infra.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221207180752_InclusaoCampoNumeroCTRNoPedido")]
    partial class InclusaoCampoNumeroCTRNoPedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Cacambas.Agregacao.Cacamba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Volume")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("cCodIntServ")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("nCodServ")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Cacambas");
                });

            modelBuilder.Entity("Domain.Clientes.Agrecacao.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo_cliente_integracao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Codigo_cliente_omie")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Contribuinte")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EnderecoCobrancaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Pessoa_fisica")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoCobrancaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Domain.Clientes.Agrecacao.EnderecoCobranca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EnderecosCobranca");
                });

            modelBuilder.Entity("Domain.Clientes.Agrecacao.EnderecoEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("EnderecosEntrega");
                });

            modelBuilder.Entity("Domain.Identidade.Agregacao.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Pedidos.Agregacao.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EnderecoEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("NotaFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroNotaFiscal")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PedidoEmitidoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoItemId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDePagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPedido")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<Guid>("cCodIntOS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("nCodOS")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EnderecoEntregaId");

                    b.HasIndex("NotaFiscalId");

                    b.HasIndex("PedidoEmitidoId");

                    b.HasIndex("PedidoItemId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Domain.Pedidos.Agregacao.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CTRId")
                        .HasColumnType("int");

                    b.Property<int?>("CacambaId")
                        .HasColumnType("int");

                    b.Property<int>("ItemEntregueId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoConcluidoId")
                        .HasColumnType("int");

                    b.Property<int>("RecolherItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("VolumeCacamba")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CTRId");

                    b.HasIndex("CacambaId");

                    b.HasIndex("ItemEntregueId");

                    b.HasIndex("PedidoConcluidoId");

                    b.HasIndex("RecolherItemId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Quando")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Eventos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Evento");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.Concluido", b =>
                {
                    b.HasBaseType("Domain.Pedidos.Eventos.Evento");

                    b.HasDiscriminator().HasValue("Concluido");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.CTR", b =>
                {
                    b.HasBaseType("Domain.Pedidos.Eventos.Evento");

                    b.HasDiscriminator().HasValue("CTR");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.Entregue", b =>
                {
                    b.HasBaseType("Domain.Pedidos.Eventos.Evento");

                    b.HasDiscriminator().HasValue("Entregue");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.NotaFiscal", b =>
                {
                    b.HasBaseType("Domain.Pedidos.Eventos.Evento");

                    b.HasDiscriminator().HasValue("NotaFiscal");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.PedidoEmitido", b =>
                {
                    b.HasBaseType("Domain.Pedidos.Eventos.Evento");

                    b.HasDiscriminator().HasValue("PedidoEmitido");
                });

            modelBuilder.Entity("Domain.Pedidos.Eventos.Recolher", b =>
                {
                    b.HasBaseType("Domain.Pedidos.Eventos.Evento");

                    b.HasDiscriminator().HasValue("Recolher");
                });

            modelBuilder.Entity("Domain.Clientes.Agrecacao.Cliente", b =>
                {
                    b.HasOne("Domain.Clientes.Agrecacao.EnderecoCobranca", "EnderecoCobranca")
                        .WithMany()
                        .HasForeignKey("EnderecoCobrancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnderecoCobranca");
                });

            modelBuilder.Entity("Domain.Clientes.Agrecacao.EnderecoEntrega", b =>
                {
                    b.HasOne("Domain.Clientes.Agrecacao.Cliente", null)
                        .WithMany("EnderecosEntrega")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Domain.Pedidos.Agregacao.Pedido", b =>
                {
                    b.HasOne("Domain.Clientes.Agrecacao.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Clientes.Agrecacao.EnderecoEntrega", "EnderecoEntrega")
                        .WithMany()
                        .HasForeignKey("EnderecoEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Pedidos.Eventos.NotaFiscal", "NotaFiscal")
                        .WithMany()
                        .HasForeignKey("NotaFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Pedidos.Eventos.PedidoEmitido", "PedidoEmitido")
                        .WithMany()
                        .HasForeignKey("PedidoEmitidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Pedidos.Agregacao.PedidoItem", "PedidoItem")
                        .WithMany()
                        .HasForeignKey("PedidoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EnderecoEntrega");

                    b.Navigation("NotaFiscal");

                    b.Navigation("PedidoEmitido");

                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("Domain.Pedidos.Agregacao.PedidoItem", b =>
                {
                    b.HasOne("Domain.Pedidos.Eventos.CTR", "CTR")
                        .WithMany()
                        .HasForeignKey("CTRId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Cacambas.Agregacao.Cacamba", "Cacamba")
                        .WithMany()
                        .HasForeignKey("CacambaId");

                    b.HasOne("Domain.Pedidos.Eventos.Entregue", "ItemEntregue")
                        .WithMany()
                        .HasForeignKey("ItemEntregueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Pedidos.Eventos.Concluido", "PedidoConcluido")
                        .WithMany()
                        .HasForeignKey("PedidoConcluidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Pedidos.Eventos.Recolher", "RecolherItem")
                        .WithMany()
                        .HasForeignKey("RecolherItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTR");

                    b.Navigation("Cacamba");

                    b.Navigation("ItemEntregue");

                    b.Navigation("PedidoConcluido");

                    b.Navigation("RecolherItem");
                });

            modelBuilder.Entity("Domain.Clientes.Agrecacao.Cliente", b =>
                {
                    b.Navigation("EnderecosEntrega");
                });
#pragma warning restore 612, 618
        }
    }
}
